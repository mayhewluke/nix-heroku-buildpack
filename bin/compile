#!/usr/bin/env bash

# These crucial variables are passed in as arguments. We need to export them if
# we want them to be available in subprocesses.
export BUILD_DIR=$1 CACHE_DIR=$2 ENV_DIR=$3

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/common

# Heroku provides environment variables as files so we can be selective about
# what we expose and what we hide. Export the ones we need using a helper
# function.
setup_variables $ENV_DIR

# Sets up the scripts we'll need and creates config files
source $DIR/setup-environment.sh

# Check if we've got a cached copy of Nix and download it if we don't
if [ -d "$NIX_ROOT_CACHE_PATH" ]; then
  topic "nix $NIX_VERSION found in cache"
else
  topic "Downloading nix $NIX_VERSION to cache"

  mkdir -p $CACHE_DIR/nix-mnt
  cd $CACHE_DIR/nix-mnt
  fetch $NIX_TARBALL $NIX_URL
  tar xjf $NIX_TARBALL
  echo "Done extracting." | indent
  rm $NIX_TARBALL
fi

# Copy Nix over to the tmp path so that our cached copy is always just the bare
# minimum Nix needs to run. It's our S3 closure that'll contain all the extra
# stuff for our app.
topic "Copying Nix to $NIX_ROOT_PATH"
mkdir -p $NIX_ROOT_PATH
rsync -a $NIX_ROOT_CACHE_PATH/ $NIX_ROOT_PATH

# Install Nix
install_nix

# Restore or build phase
topic "Downloading closure"
try_download_closure
if [ -n "$NIX_BUILD_ON_PUSH" ]; then
  topic "NIX_BUILD_ON_PUSH set; starting build"
  source $DIR/build
elif [ -e $CLOSURE ]; then # No NIX_BUILD_ON_PUSH but we do have a closure
  topic "NIX_BUILD_ON_PUSH not set; restoring from closure"
  # Restore the project from the stored closure
  $BUILD_DIR/bin/proot -b $NIX_ROOT_PATH:/nix $DIR/restore-from-closure
else # No NIX_BUILD_ON_PUSH *OR* closure
  topic "Closure not found and NIX_BUILD_ON_PUSH not set; skipping app installation"
fi

# Copy all our Nix stuff (including the store) to BUILD_DIR so it can be
# accessed by the running app.
topic "Copying Nix to BUILD_DIR, excluding patterns in .slugexclude"
mkdir -p $BUILD_DIR/nix-mnt
# Make sure the rsync exclude file at least exists or we'll get errors
touch $BUILD_DIR/.slugexclude
# Then copy everything over, minus the exclude patterns from .slugexclude
rsync -a --exclude-from=$BUILD_DIR/.slugexclude $NIX_MNT/ $BUILD_DIR/nix-mnt

# Final instructions for the user
if [ -z "${NIX_BUILD_ON_PUSH:-}" ] && [ ! -e /tmp/closure.log ]; then
  topic "Build environment set up."
  echo "To finish building, run:" | indent
  echo "$ heroku run --size=PX build" | indent
  echo
  echo "Then complete the deploy with:" | indent
  echo "$ git commit --amend --no-edit" | indent
  echo "$ git push -f heroku master" | indent
fi

topic "Make sure your Procfile includes run_proot.sh,"
echo "like so:" | indent
echo "web: run_proot.sh myapp -p \$PORT" | indent
