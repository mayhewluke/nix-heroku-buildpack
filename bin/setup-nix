#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/common

# Make sure Nix installs things to the right place since we don't exactly have
# a real HOME
export HOME=$NIX_MNT
install_nix
source $HOME/.nix-profile/etc/profile.d/nix.sh
export PATH=$HOME/.nix-profile/bin:$PATH
# TODO remove - doesn't seem to be used?
# set $nix to the hash of the nix version in store
eval $(grep nix= ./install | head -n 1)

# TODO rephrase this - I don't think it's doing quite what it says it is
topic "Creating symbolic link to /nix in BUILD_DIR"
ln -s /nix/var/nix/profiles/default $BUILD_DIR/.nix-profile

# Add our executable scripts etc. to the path for easy access from Procfile and
# one-off build dynos.
topic "Creating profile.d"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF > $BUILD_DIR/.profile.d/000_nix.sh
export PATH=/app/.nix-profile/bin:/app/bin:\$PATH
EOF

# If we don't copy these to the BUILD_DIR then we won't have access to them if
# we run a one-off dyno to run the build
topic "Copying build scripts"
cp -f $DIR/* $BUILD_DIR/bin/

topic "Creating run_proot.sh"
cat <<EOF > $BUILD_DIR/bin/run_proot.sh
#!/usr/bin/env bash

/app/bin/proot -b /app/nix-mnt/$NIX_VERSION_FULL:/nix bash /app/bin/run_in_proot.sh "\$@"
EOF

# TODO Figure out what's going on here with the CMD stuff and why this is needed
topic "Creating run_in_proot.sh"
cat <<EOF > $BUILD_DIR/bin/run_in_proot.sh
#!/bin/bash

set -e
test -d /nix && test -d /app/.nix-profile
source /app/.nix-profile/etc/profile.d/nix.sh

CMD=\$1
\$CMD "\${@:2}"
EOF

topic "Creating run_result.sh"
cat <<EOF > $BUILD_DIR/bin/run_result.sh
#!/usr/bin/env bash

/app/bin/proot -b /app/nix-mnt/$NIX_VERSION_FULL:/nix bash /app/bin/run_in_result.sh "\$@"
EOF

topic "Creating run_in_result.sh"
cat <<EOF > $BUILD_DIR/bin/run_in_result.sh
#!/bin/bash

set -e
test -d /nix && test -d /app/.nix-profile
source /app/.nix-profile/etc/profile.d/nix.sh

cd /app/result
"\$@"
EOF
